{
  "meta": {
    "version": "0.1.0"
  },
  "sheets": {
    "==content==": [
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "referrals_add_location",
        "status": "released",
        "order": "0"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "referrals_eng",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "referrals_transl",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "triggers_eng",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "triggers_transl",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "wa_bold_eng",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "wa_bold_transl",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "urls",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "urls_transl",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "parenttext_name_eng",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "parenttext_name_transl",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "joining_triggers_add_group",
        "status": "released",
        "order": "0"
      },
      {
        "flow_type": "flow_editing",
        "flow_name": "",
        "sheet_name": "joining_triggers_eng",
        "status": "released",
        "order": "1"
      },
      {
        "flow_type": "translation_editing",
        "flow_name": "",
        "sheet_name": "joining_triggers_transl",
        "status": "released",
        "order": "1"
      }
    ],
    "wa_bold_eng": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*",
        "change": "**",
        "condition_var": "",
        "category": "*"
      }
    ],
    "wa_bold_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*",
        "original": "**",
        "language": "ukr",
        "replacement": "*"
      }
    ],
    "referrals_add_location": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{natural_disasters_referrals}.*",
        "change": "{natural_disasters_referrals}",
        "condition_var": "@fields.location",
        "category": "{natural_disasters_referrals}",
        "category:Ukraine": "{natural_disasters_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{natural_disasters_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{mental_health_referrals}.*",
        "change": "{mental_health_referrals}",
        "condition_var": "@fields.location",
        "category": "{mental_health_referrals}",
        "category:Ukraine": "{mental_health_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{mental_health_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{health_referrals}.*",
        "change": "{health_referrals}",
        "condition_var": "@fields.location",
        "category": "{health_referrals}",
        "category:Ukraine": "{health_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{health_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{generic_referrals}.*",
        "change": "{generic_referrals}",
        "condition_var": "@fields.location",
        "category": "{generic_referrals}",
        "category:Ukraine": "{generic_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{generic_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{family_referrals}.*",
        "change": "{family_referrals}",
        "condition_var": "@fields.location",
        "category": "{family_referrals}",
        "category:Ukraine": "{family_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{family_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{child_protection_referrals}.*",
        "change": "{child_protection_referrals}",
        "condition_var": "@fields.location",
        "category": "{child_protection_referrals}",
        "category:Ukraine": "{child_protection_referrals ukraine}",
        "condition:Ukraine": "ukraine",
        "condition_type:Ukraine": "has_only_phrase",
        "category:Georgia": "{child_protection_referrals georgia}",
        "condition:Gaza": "georgia",
        "condition_type:Gaza": "has_only_phrase"
      }
    ],
    "referrals_eng": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{natural_disasters_referrals ukraine}.*",
        "change": "{natural_disasters_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{mental_health_referrals ukraine}.*",
        "change": "{mental_health_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{health_referrals ukraine}.*",
        "change": "{health_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{generic_referrals ukraine}.*",
        "change": "{generic_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{family_referrals ukraine}.*",
        "change": "{family_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{child_protection_referrals ukraine}.*",
        "change": "{child_protection_referrals ukraine}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{natural_disasters_referrals georgia}.*",
        "change": "{natural_disasters_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{mental_health_referrals georgia}.*",
        "change": "{mental_health_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{health_referrals georgia}.*",
        "change": "{health_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{generic_referrals georgia}.*",
        "change": "{generic_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{family_referrals georgia}.*",
        "change": "{family_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{child_protection_referrals georgia}.*",
        "change": "{child_protection_referrals georgia}",
        "condition_var": "",
        "category": "Add english referral here"
      }
    ],
    "referrals_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{natural_disasters_referrals ukraine}.*",
        "original": "{natural_disasters_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{mental_health_referrals ukraine}.*",
        "original": "{mental_health_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{health_referrals ukraine}.*",
        "original": "{health_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{generic_referrals ukraine}.*",
        "original": "{generic_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{family_referrals ukraine}.*",
        "original": "{family_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{child_protection_referrals ukraine}.*",
        "original": "{child_protection_referrals ukraine}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{natural_disasters_referrals georgia}.*",
        "original": "{natural_disasters_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{mental_health_referrals georgia}.*",
        "original": "{mental_health_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{health_referrals georgia}.*",
        "original": "{health_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{generic_referrals georgia}.*",
        "original": "{generic_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{family_referrals georgia}.*",
        "original": "{family_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{child_protection_referrals georgia}.*",
        "original": "{child_protection_referrals georgia}",
        "language": "ukr",
        "replacement": "Add translated referral here"
      }
    ],
    "triggers_eng": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{HELP}.*",
        "change": "{HELP}",
        "condition_var": "",
        "category": "HELP"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{MENU}.*",
        "change": "{MENU}",
        "condition_var": "",
        "category": "MENU"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{PLAY}.*",
        "change": "{PLAY}",
        "condition_var": "",
        "category": "PLAY"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{STOP}.*",
        "change": "{STOP}",
        "condition_var": "",
        "category": "STOP"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{START}.*",
        "change": "{START}",
        "condition_var": "",
        "category": "START"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{PAUSE}.*",
        "change": "{PAUSE}",
        "condition_var": "",
        "category": "PAUSE"
      }
    ],
    "triggers_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{HELP}.*",
        "original": "{HELP}",
        "language": "ukr",
        "replacement": "Add translation"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{MENU}.*",
        "original": "{MENU}",
        "language": "ukr",
        "replacement": "Add translation"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{PLAY}.*",
        "original": "{PLAY}",
        "language": "ukr",
        "replacement": "Add translation"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{STOP}.*",
        "original": "{STOP}",
        "language": "ukr",
        "replacement": "Add translation"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{START}.*",
        "original": "{START}",
        "language": "ukr",
        "replacement": "Add translation"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{PAUSE}.*",
        "original": "{PAUSE}",
        "language": "ukr",
        "replacement": "Add translation"
      }
    ],
    "urls": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{share link}.*",
        "change": "{share link}",
        "condition_var": "",
        "category": "Add url"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{consent_link}.*",
        "change": "{consent_link}",
        "condition_var": "",
        "category": "Add url"
      }
    ],
    "urls_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{share link}.*",
        "original": "{share link}",
        "language": "ukr",
        "replacement": "add url"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{consent_link}.*",
        "original": "{consent_link}",
        "language": "ukr",
        "replacement": "add url"
      }
    ],
    "joining_triggers_add_group": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger}.*",
        "change": "{joining_trigger}",
        "condition_var": "@fields.joining_trigger_id",
        "category": "{joining_trigger}",
        "category:group_a": "{joining_trigger_group_a}",
        "condition:group_a": "group_a",
        "condition_type:group_a": "has_only_phrase",
        "category:group_b": "{joining_trigger_group_b}",
        "condition:group_b": "group_b",
        "condition_type:group_b": "has_only_phrase",
        "category:group_c": "{joining_trigger_group_c}",
        "condition:group_c": "group_c",
        "condition_type:group_c": "has_only_phrase"
      }
    ],
    "joining_triggers_eng": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger}.*",
        "change": "{joining_trigger}",
        "condition_var": "",
        "category": "TEST"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_a}.*",
        "change": "{joining_trigger_group_a}",
        "condition_var": "",
        "category": "TEST_GROUP_A"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_b}.*",
        "change": "{joining_trigger_group_b}",
        "condition_var": "",
        "category": "TEST_GROUP_B"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_c}.*",
        "change": "{joining_trigger_group_c}",
        "condition_var": "",
        "category": "TEST_GROUP_C"
      }
    ],
    "joining_triggers_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger}.*",
        "change": "{joining_trigger}",
        "language": "ukr",
        "replacement": "test"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_a}.*",
        "change": "{joining_trigger}",
        "language": "ukr",
        "replacement": "TEST_GROUP_A"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_b}.*",
        "change": "{joining_trigger}",
        "language": "ukr",
        "replacement": "TEST_GROUP_B"
      },
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{joining_trigger_group_c}.*",
        "change": "{joining_trigger}",
        "language": "ukr",
        "replacement": "TEST_GROUP_C"
      }
    ],
    "parenttext_name_transl": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{prog_name}.*",
        "original": "{prog_name}",
        "language": "ukr",
        "replacement": "Батьківська опора"
      }
    ],
    "parenttext_name_eng": [
      {
        "type_of_edit": "replace_bit_of_text",
        "flow_id": "Regex:.*",
        "original_row_id": "",
        "node_identifier": "Regex:.*{prog_name}.*",
        "change": "{prog_name}",
        "condition_var": "",
        "category": "Batkivska Opora"
      }
    ]
  }
}